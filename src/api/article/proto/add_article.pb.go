// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: add_article.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AddArticleIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	CategoryId int64  `protobuf:"varint,2,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Title      string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Excerpt    string `protobuf:"bytes,4,opt,name=excerpt,proto3" json:"excerpt,omitempty"`
	Slug       string `protobuf:"bytes,5,opt,name=slug,proto3" json:"slug,omitempty"`
	Body       string `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *AddArticleIn) Reset() {
	*x = AddArticleIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_add_article_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddArticleIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddArticleIn) ProtoMessage() {}

func (x *AddArticleIn) ProtoReflect() protoreflect.Message {
	mi := &file_add_article_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddArticleIn.ProtoReflect.Descriptor instead.
func (*AddArticleIn) Descriptor() ([]byte, []int) {
	return file_add_article_proto_rawDescGZIP(), []int{0}
}

func (x *AddArticleIn) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AddArticleIn) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AddArticleIn) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddArticleIn) GetExcerpt() string {
	if x != nil {
		return x.Excerpt
	}
	return ""
}

func (x *AddArticleIn) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *AddArticleIn) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type AddArticleOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data    *OutData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddArticleOut) Reset() {
	*x = AddArticleOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_add_article_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddArticleOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddArticleOut) ProtoMessage() {}

func (x *AddArticleOut) ProtoReflect() protoreflect.Message {
	mi := &file_add_article_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddArticleOut.ProtoReflect.Descriptor instead.
func (*AddArticleOut) Descriptor() ([]byte, []int) {
	return file_add_article_proto_rawDescGZIP(), []int{1}
}

func (x *AddArticleOut) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddArticleOut) GetData() *OutData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AddArticleOut) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type OutData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OutData) Reset() {
	*x = OutData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_add_article_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutData) ProtoMessage() {}

func (x *OutData) ProtoReflect() protoreflect.Message {
	mi := &file_add_article_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutData.ProtoReflect.Descriptor instead.
func (*OutData) Descriptor() ([]byte, []int) {
	return file_add_article_proto_rawDescGZIP(), []int{2}
}

var File_add_article_proto protoreflect.FileDescriptor

var file_add_article_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x64, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x5b, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4f, 0x75, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x32, 0x4c, 0x0a,
	0x0a, 0x41, 0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x43,
	0x61, 0x6c, 0x6c, 0x12, 0x0d, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x49, 0x6e, 0x1a, 0x0e, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4f,
	0x75, 0x74, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x61, 0x64, 0x64,
	0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_add_article_proto_rawDescOnce sync.Once
	file_add_article_proto_rawDescData = file_add_article_proto_rawDesc
)

func file_add_article_proto_rawDescGZIP() []byte {
	file_add_article_proto_rawDescOnce.Do(func() {
		file_add_article_proto_rawDescData = protoimpl.X.CompressGZIP(file_add_article_proto_rawDescData)
	})
	return file_add_article_proto_rawDescData
}

var file_add_article_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_add_article_proto_goTypes = []interface{}{
	(*AddArticleIn)(nil),  // 0: AddArticleIn
	(*AddArticleOut)(nil), // 1: AddArticleOut
	(*OutData)(nil),       // 2: OutData
}
var file_add_article_proto_depIdxs = []int32{
	2, // 0: AddArticleOut.data:type_name -> OutData
	0, // 1: AddArticle.Call:input_type -> AddArticleIn
	1, // 2: AddArticle.Call:output_type -> AddArticleOut
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_add_article_proto_init() }
func file_add_article_proto_init() {
	if File_add_article_proto != nil {
		return
	}
	file_annotations_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_add_article_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddArticleIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_add_article_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddArticleOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_add_article_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_add_article_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_add_article_proto_goTypes,
		DependencyIndexes: file_add_article_proto_depIdxs,
		MessageInfos:      file_add_article_proto_msgTypes,
	}.Build()
	File_add_article_proto = out.File
	file_add_article_proto_rawDesc = nil
	file_add_article_proto_goTypes = nil
	file_add_article_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AddArticleClient is the client API for AddArticle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddArticleClient interface {
	Call(ctx context.Context, in *AddArticleIn, opts ...grpc.CallOption) (*AddArticleOut, error)
}

type addArticleClient struct {
	cc grpc.ClientConnInterface
}

func NewAddArticleClient(cc grpc.ClientConnInterface) AddArticleClient {
	return &addArticleClient{cc}
}

func (c *addArticleClient) Call(ctx context.Context, in *AddArticleIn, opts ...grpc.CallOption) (*AddArticleOut, error) {
	out := new(AddArticleOut)
	err := c.cc.Invoke(ctx, "/AddArticle/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddArticleServer is the server API for AddArticle service.
type AddArticleServer interface {
	Call(context.Context, *AddArticleIn) (*AddArticleOut, error)
}

// UnimplementedAddArticleServer can be embedded to have forward compatible implementations.
type UnimplementedAddArticleServer struct {
}

func (*UnimplementedAddArticleServer) Call(context.Context, *AddArticleIn) (*AddArticleOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}

func RegisterAddArticleServer(s *grpc.Server, srv AddArticleServer) {
	s.RegisterService(&_AddArticle_serviceDesc, srv)
}

func _AddArticle_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddArticleIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddArticleServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AddArticle/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddArticleServer).Call(ctx, req.(*AddArticleIn))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddArticle_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AddArticle",
	HandlerType: (*AddArticleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _AddArticle_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "add_article.proto",
}
